Processing:

import processing.serial.*;
Serial myport;
Table table;
int Read = 500; /* amount of data recieved*/
int Readcount = 0;
String val;
String Date;
String Hew = "7A0092B6BAE4";
String Chr = "7A00925C69DD";
void setup()
{
  table = new Table();
  String portname = Serial.list()[2];
  myport = new Serial(this, portname, 9600);

  table.addColumn("Users");
  table.addColumn("");
  table.addColumn("Timestamp");
  table.addColumn("");
  table.addColumn("Attendance");
}

void serialEvent(Serial myport)
{
  char q;
  val = myport.readStringUntil('\n');
  if (val!= null)
  {
    println(val);
    Date = str(year()) + ' ' + str(month()) + ' '  + str(day());
    val = trim(val);
    TableRow newRow = table.addRow();
    newRow.setString("Users", val);
    newRow.setString("Timestamp", Date);
    newRow.setString("Attendance", "Here");

    Table load = loadTable("Checkin.csv", "header");
    for (TableRow row : load.rows())
    {
      String user = row.getString("Users");
      String time = row.getString("Timestamp");
      char Person[] = user.toCharArray();
      if (val.equals(Hew))
      {
        println("At (" + time + ")" + user + " Has logged in"); 
        for (q = 0; q < 12; q++)
        {
          myport.write("Hi Master"); 
          println(Person[q]);
        }
      }
      if (val.equals(Chr))
      {
        println("At (" + time + ")" + user + " Has logged in"); 
        for (q = 0; q < 12; q++)
        {
          myport.write("Hi Christy");
          println(Person[q]);
        }
      }
      saveTable(table, "Checkin.csv");
    }
  }
}

void draw()
{
}



Arduino:

#include <LiquidCrystal_I2C.h>
#include <SoftwareSerial.h>
#include <Wire.h>
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);
int bluetoothTx = 10;
int bluetoothRx = 9;
int a = 0;
SoftwareSerial bluetooth(bluetoothTx, bluetoothRx);
char Bluestring[16];
void setup()
{
  Serial.begin(9600);
  pinMode(5, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(10, INPUT);
  pinMode(11, OUTPUT);
  pinMode(5, OUTPUT);
  lcd.begin(20, 4);
  lcd.backlight();

  bluetooth.begin(115200);
  bluetooth.print("$");
  bluetooth.print("$");
  bluetooth.print("$");
  delay(100);
  bluetooth.println("U,9600,N");

  bluetooth.begin(9600);
}

void loop()
{
  char Read;
  while (Serial.available())
  {
    Read = Serial.read();
    if (Read != 2 && Read != 3 && Read != 10 && Read != 13){
      bluetooth.print(Read);
      a++;
    }
  }
  if (a > 11)
  {
    bluetooth.print('\n');
    a = 0;
  }
  for (int c = 0; c <= 13; c++)
  {
    Bluestring[c] = 0;
  }
  if (bluetooth.available())
  {
    Serial.print((char)bluetooth.read());
    int blue = ((char)bluetooth.read());
    lcd.setCursor(0, 0);
    lcd.write(blue);
    delay(1000);
    lcd.clear();

  }
}

Processing V2:

import processing.serial.*;
Serial port;
Table table;
String val;
int Read = 500;
String Hew = "7A0092B6BAE4";
String Chr = "7A00925C69DD";
void setup()
{
  table = new Table();
  port = new Serial(this, "COM43", 9600);
}
void draw()
{
  while (port.available() > 0) 
  {
    val = port.readStringUntil('\n');
    if (val != null)
    {
      if (val.equals(Hew))
      {
        port.write("Hi Hewitt");
        println("Got it");
      }
      if (val.equals(Chr))
      {
        port.write("Hi Christy");
        println("Got it2");
      }
    }
  }
}

Processing v3:

import processing.serial.*;
Serial port;
Table table;
processing.data.Table nTable;
String val;
String Time;
String Date;
int Read = 500;
int r = -1;
int z = 0;
String here = "Here";
String Hew = "7A0092B6BAE4";
String Chr = "7A00925C69DD";
String Alv = "82003BE03D64";
String Hry = "82003B943A17";
String Drk = "82003B7B8446";
void setup()
{
  File d = new File(sketchPath("") + "Login.csv");
  table = new Table();
  nTable = new Table();
  port = new Serial(this, "COM45", 9600);
  nTable = loadTable("Login.csv", "header, csv");
  if (!d.exists())
  {
    table = new processing.data.Table(); 
    nTable.addColumn("Name");
    nTable.addColumn("");
    nTable.addColumn("Present");
    nTable.addColumn("");
    nTable.addColumn("Timestamp");
    nTable.addColumn("");
    nTable.addColumn("#");
    nTable.addColumn("");
    nTable.addColumn("Time");
  } else
    nTable = loadTable("Login.csv", "header, csv");
}
void draw()
{

  table.addColumn("Check", Table.STRING);
  table.addColumn("");
  table.addColumn("Users");
  table.addColumn("");
  table.addColumn("Nick");

  while (port.available() > 0) 
  {
    val = port.readStringUntil('\n');
    val = trim(val); 
    //  println(val);
    if (val != null)
    {
      Date = str(year()) + ' ' + str(month()) + ' '  + str(day());
      Time = str(minute()) + ' ' + str(hour());
      table.addRow();
      table.setString(0, "Check", val);
      table.setString(0, "Users", "7A0092B6BAE4");
      table.setString(1, "Users", "7A00925C69DD");
      table.setString(2, "Users", "82003BE03D64");
      table.setString(3, "Users", "82003B943A17");
      table.setString(4, "Users", "82003B7B8446");
      table.setString(5, "Users", "82003BA0CFD6");
      table.setString(6, "Users", "82003BD81D7C");
      table.setString(7, "Users", "82003BD3066C");
      table.setString(8, "Users", "82003BBAB0B3");
      table.setString(9, "Users", "82003BB25F54");

      table.setString(0, "Nick", "Hewitt");
      table.setString(1, "Nick", "Christy");
      table.setString(2, "Nick", "Alvarez");
      table.setString(3, "Nick", "Henry");
      table.setString(4, "Nick", "Derek");
      table.setString(5, "Nick", "Tory");
      table.setString(6, "Nick", "Peter");
      table.setString(7, "Nick", "Noah");
      table.setString(8, "Nick", "Aaron");
      table.setString(9, "Nick", "Wede");

      TableRow hi = table.findRow(val, "Users");
      String y = hi.getString("Nick");  
      port.write("Hi ");
      port.write(y);
      z = z + 1;
      String q = str(z);
      TableRow newRow = nTable.addRow();
      newRow.setString("Name", y);
      newRow.setString("Present", here);
      newRow.setString("Timestamp", Date);
      newRow.setString("Time", Time);
      nTable.setString(0, "#", q);
      saveTable(table, "Checkin.csv");
      saveTable(nTable, "Login.csv");
    }
  }
}


